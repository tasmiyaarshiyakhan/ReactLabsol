[{"C:\\Users\\abmin\\Desktop\\java\\react js  lab\\ps2\\src\\index.tsx":"1","C:\\Users\\abmin\\Desktop\\java\\react js  lab\\ps2\\src\\reportWebVitals.ts":"2","C:\\Users\\abmin\\Desktop\\java\\react js  lab\\ps2\\src\\App.tsx":"3","C:\\Users\\abmin\\Desktop\\java\\react js  lab\\ps2\\src\\component\\ShowList.tsx":"4","C:\\Users\\abmin\\Desktop\\java\\react js  lab\\ps2\\src\\component\\ExpenseTracker.tsx":"5","C:\\Users\\abmin\\Desktop\\java\\react js  lab\\ps2\\src\\service\\menu.tsx":"6"},{"size":554,"mtime":1657510650883,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1657510649514,"results":"9","hashOfConfig":"8"},{"size":501,"mtime":1657516720925,"results":"10","hashOfConfig":"8"},{"size":4013,"mtime":1657513790820,"results":"11","hashOfConfig":"8"},{"size":4285,"mtime":1657513861790,"results":"12","hashOfConfig":"8"},{"size":681,"mtime":1657518282457,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"rooszz",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\abmin\\Desktop\\java\\react js  lab\\ps2\\src\\index.tsx",[],[],[],"C:\\Users\\abmin\\Desktop\\java\\react js  lab\\ps2\\src\\reportWebVitals.ts",[],[],"C:\\Users\\abmin\\Desktop\\java\\react js  lab\\ps2\\src\\App.tsx",[],[],"C:\\Users\\abmin\\Desktop\\java\\react js  lab\\ps2\\src\\component\\ShowList.tsx",["34"],[],"import { useEffect, useState } from \"react\"\r\nimport IDataList from \"../model/IDataList\"\r\nimport {getDataFromServer } from '../service/menu'\r\nimport ExpenseTracker from \"./ExpenseTracker\"\r\n\r\nfunction ShowData () {\r\n\r\n    const [items, setItems] = useState<IDataList[]>([])\r\n    const [error, setError] = useState<Error | null>(null)\r\n    const [sum, setSum] = useState<number | null>()\r\n    const [rahulspent, setRahulspent] = useState<number>(0)\r\n    const [rameshspent, setRameshspent] = useState<number>(0)\r\n    const [showform, setShowForm] = useState<boolean>(false)\r\n\r\n    var rahulspent1 : number = 0\r\n    var rameshspent1 : number = 0\r\n    // this is hook function automatically get call if we do any changes on set varible. \r\n    useEffect(()=>{\r\n        const fetchMenu = async () => {\r\n            try {\r\n                const data = await getDataFromServer()\r\n                setItems(data)\r\n                setSum(data.reduce((result,v) =>  result = result + v.price , 0 ))\r\n                Shares(data)\r\n            }\r\n\r\n            catch (error : any) {\r\n                setError(error)\r\n            }\r\n        }\r\n        fetchMenu()\r\n    },[showform])\r\n\r\n    const Shares = (data :IDataList[]) =>{\r\n    \r\n        data.map(\r\n            sams => (\r\n                sams.payeeName === \"Rahul\" ? (\r\n                    rahulspent1 = rahulspent1 + sams.price\r\n                ):\r\n                (\r\n                    rameshspent1 = rameshspent1 + sams.price\r\n                )\r\n            )\r\n        )\r\n        setRahulspent(rahulspent1)\r\n        setRameshspent(rameshspent1)\r\n    }\r\n\r\n    const success =() => {\r\n        setShowForm(false)\r\n    }\r\n    const cancel = () => {\r\n        setShowForm(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header id=\"page-Header\">Expense Tracker</header>\r\n            <button id=\"Add-Button\" onClick={() => setShowForm(true)}>Add</button>\r\n            {\r\n                showform && (\r\n                    <div className=\"form\">\r\n                        <ExpenseTracker onTrue={success} onClose={cancel}/>\r\n                    </div>\r\n                ) \r\n            }\r\n            <>\r\n                <div className=\"use-inline date header-color\">Date</div>\r\n                <div className=\"use-inline header-color\">Product Purchased</div>\r\n                <div className=\"use-inline price header-color\">Price</div>\r\n                <div className=\"use-inline header-color\" style={{width: 112}}>Payee</div>\r\n            </>\r\n            {\r\n                items && (\r\n                    items.map (\r\n                        (user, idx) =>(\r\n                            <div key={idx}>\r\n                                <div className=\"use-inline date\">{user.setDate}</div>\r\n                                <div className=\"use-inline\">{user.product}</div>\r\n                                <div className=\"use-inline price\">{user.price}</div>\r\n                                <div className={`use-inline ${user.payeeName}`}>{user.payeeName}</div>\r\n                            </div>\r\n                        )\r\n                    )\r\n                )\r\n            }\r\n            <hr />\r\n            \r\n            <div className=\"use-inline \">Total: </div>\r\n            <span className=\"use-inline total\">{sum}</span> <br />\r\n            <div className=\"use-inline \">Rahul paid: </div>\r\n            <span className=\"use-inline total Rahul\">{rahulspent}</span> <br />\r\n            <div className=\"use-inline \">Ramesh paid: </div>\r\n            <span className=\"use-inline total Ramesh\">{rameshspent}</span> <br />\r\n            <span className=\"use-inline payable\">{rahulspent>rameshspent? \"Pay Rahul \" : \"Pay Ramesh\"}</span>\r\n            <span className=\"use-inline payable price\"> {Math.abs((rahulspent-rameshspent)/2)}</span>\r\n            \r\n            {\r\n               error && (\r\n                    <>\r\n                        {error?.message}\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default ShowData","C:\\Users\\abmin\\Desktop\\java\\react js  lab\\ps2\\src\\component\\ExpenseTracker.tsx",[],[],"C:\\Users\\abmin\\Desktop\\java\\react js  lab\\ps2\\src\\service\\menu.tsx",[],[],{"ruleId":"35","severity":1,"message":"36","line":32,"column":7,"nodeType":"37","endLine":32,"endColumn":17,"suggestions":"38"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Shares'. Either include it or remove the dependency array.","ArrayExpression",["39"],{"desc":"40","fix":"41"},"Update the dependencies array to be: [Shares, showform]",{"range":"42","text":"43"},[1155,1165],"[Shares, showform]"]